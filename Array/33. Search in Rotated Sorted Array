class Solution {
public:
    int search(vector<int>& nums, int target) {
        //linear search
        // for(int i =0 ; i< nums.size(); i++){
        //     if(nums[i]== target){
        //         return i;
        //     }
        // }
        // return -1;

        //binary search
        int pivotIndex = indexOfPivot(nums);
        int low = 0;
        int high = nums.size()-1;
        
       if(nums[pivotIndex] <= target && target <=nums[nums.size()-1]) low = pivotIndex ;
       else high = pivotIndex -1;

         while(high >=low){
            int mid = (low + high)/2;

            if(nums[mid] > target){
                high = mid-1;
            }
            else if(nums[mid] < target){
                low = mid + 1;
            }
            else{
                return mid;
            }
        }
        return -1;
    }
    int indexOfPivot(vector<int>& nums){
        int high = nums.size()-1;
        int low = 0;

        while(low<=high){
            int mid = (low + high)/2;

            if(nums[mid] < nums[high]) high = mid;
            else if(nums[mid] > nums[high])low = mid + 1;
            else return mid;

        }
            return 0;
    }
};
